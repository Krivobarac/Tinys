@use "abstracts/variables" as *;

@mixin rwd($pixels, $type: max) {
    @if $type ==max or $type ==min {
        @media (#{$type}-width: #{$pixels}px) {
            @content;
        }
    }

    @else {
        @error "Invalid value for $type: '#{$type}'. Only 'max' or 'min' are allowed.";
    }
}

@mixin btn($bg: $primary-color, $fontSize: 1.5rem, $fontWeight: 600, $color: $secondary-color, $borderColor: $primary-color,
    $padding: .9rem 2.3rem, $mobileFontSize: 1.4rem, $mobilePadding: 1rem 1.6rem) {
    display: inline-block;
    width: max-content;
    white-space: nowrap;
    text-align: center;
    letter-spacing: .15rem;
    cursor: pointer;
    border: .1rem solid $borderColor;
    color: $color;
    font-size: $fontSize;
    font-weight: $fontWeight;
    background-color: $bg;
    padding: $padding;

    @include rwd(568) {
        font-size: $mobileFontSize;
        padding: $mobilePadding;
    }

    @content;
}

@mixin flex($justify: center, $align: center, $gap: 0, $flow: row nowrap) {
    display: flex;
    justify-content: $justify;
    align-items: $align;
    gap: $gap;
    flex-flow: $flow;
    @content;
}

@mixin positioning ($position: absolute, $top: auto, $right: auto, $bottom: auto, $left: auto, $width: auto, $height: auto) {
    position: $position;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
    width: $width;
    height: $height;

    @if($left == 50% and $top == 50%) {
        transform: translate(-50%, -50%);
    }

    @else if($right == 50% and $top == 50%) {
        transform: translate(50%, -50%);
    }

    @else if($top == 50%) {
        transform: translate(-50%);
    }

    @else if($bottom == 50%) {
        transform: translate(50%);
    }

    @else if($left == 50%) {
        transform: translateX(-50%);
    }

    @else if($right == 50%) {
        transform: translateX(50%);
    }
}